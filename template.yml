AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  SuggestionsDiscordWebhook:
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'SuggestionsDiscordWebhook'
  AuditDiscordWebhook:
    Type: AWS:SSM:Parameter::Value<String>
    Default: "CFCServersWebhooksWebhook"

  CFCFormsDiscordBotToken:
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'CFCFormsDiscordBotToken'

Globals:
  Function:
    Runtime: go1.x
    Handler: lambda
    Timeout: 10
    Environment:
      Variables:
        SUGGESTIONS_BASE_URL: "https://cfcservers.org/suggestion?token="
        DISCORD_PUBLIC_KEY: "840d7423afb7fd77cbb9468eb21fa56b8cde0c5eb514855a32558aeddb4215c6"
        DISCORD_CLIENT_ID: "817289571142205450"
        SUBMISSIONS_DATABASE: !Ref SubmissionsDatabase
        SUGGESTIONS_WEBHOOK: !Ref SuggestionsDiscordWebhook
        CFCSERVERS_WEBHOOKS_WEBHOOK: !Ref AuditDiscordWebhook
        DISCORD_BOT_TOKEN: !Ref CFCFormsDiscordBotToken
        GUILD_ID: 225975453138026497

Resources:
  SubmissionsApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: '$default'
      DisableExecuteApiEndpoint: true
      Domain:
        DomainName: submissions.cfcservers.org
        CertificateArn: arn:aws:acm:us-east-1:215025579220:certificate/df5a47c9-1a2e-48e5-a952-971cbb03ecf2
      Auth:
        DefaultAuthorizer: FormsDefaultAuthorizer
        Authorizers:
          FormsDefaultAuthorizer:
            EnableSimpleResponses: true
            AuthorizerPayloadFormatVersion: 2.0
            FunctionArn: !GetAtt AuthorizerFunction.Arn
            Identity:
              Headers:
                - Authorization

  SubmissionsDatabase:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: UUID
          AttributeType: S
        - AttributeName: OwnerID
          AttributeType: S
        - AttributeName: CreatedAt
          AttributeType: S
      KeySchema:
        - AttributeName: UUID
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_IMAGE

      GlobalSecondaryIndexes:
        - IndexName: ownerid-createdat-index
          KeySchema:
            - AttributeName: OwnerID
              KeyType: HASH
            - AttributeName: CreatedAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  AuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/authorizer/

  CreateSubmission:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/create_submission/
      Policies: AmazonDynamoDBFullAccess
      Events:
        CreateHandler:
          Type: HttpApi
          Properties:
            ApiId: !Ref SubmissionsApi
            Path: '/submissions'
            Method: POST

  IndexSubmissions:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/index_submissions/
      Policies: AmazonDynamoDBFullAccess
      Events:
        IndexHandler:
          Type: HttpApi
          Properties:
            ApiId: !Ref SubmissionsApi
            Path: '/submissions'
            Method: GET

  GetSubmission:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/get_submission/
      Policies: AmazonDynamoDBFullAccess
      Events:
        GetHandler:
          Type: HttpApi
          Properties:
            ApiId: !Ref SubmissionsApi
            Path: '/submissions/{uuid}'
            Method: GET
            Auth:
              Authorizer: NONE

  SendSubmission:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/send_submission/
      Policies: AmazonDynamoDBFullAccess
      Events:
        SendHandler:
          Type: HttpApi
          Properties:
            ApiId: !Ref SubmissionsApi
            Path: '/submissions/{uuid}/send'
            Method: POST
            Auth:
              Authorizer: NONE

  DeleteSubmission:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/delete_submission/
      Policies: AmazonDynamoDBFullAccess
      Events:
        DeleteHandler:
          Type: HttpApi
          Properties:
            ApiId: !Ref SubmissionsApi
            Path: '/submissions/{uuid}'
            Method: DELETE
            Auth:
              Authorizer: NONE

  HandleDiscordInteraction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/slash_commands/
      Policies: AmazonDynamoDBFullAccess
      Events:
        DeleteHandler:
          Type: HttpApi
          Properties:
            ApiId: !Ref SubmissionsApi
            Path: '/discord_interaction'
            Method: POST
            Auth:
              Authorizer: NONE


